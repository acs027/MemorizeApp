//
//  EmojiMemoryGame.swift
//  Memorize
//
//  Created by ali cihan on 13.10.2024.
//

import Foundation
import SwiftUI

class EmojiMemoryGame: ObservableObject {
    typealias Card = MemoryGame<String>.Card
    private static var theme = "default" {
        willSet {
            switch newValue {
            case "vehicle":
                emojis = vehicleEmojis
            case "sport":
                emojis = sportEmojis
            case "animal":
                emojis = animalEmojis
            case "food":
                emojis = foodEmojis
            case "nature":
                emojis = natureEmojis
            case "face":
                emojis = facesEmojis
            default:
                emojis = defaultEmojis
            }
        }
    }
    
    private var themes = ["default", "vehicle", "sport", "animal", "food", "nature", "face"]
    
    private static var emojis = defaultEmojis
    
    
    static let vehicleEmojis = ["üöó", "üöï", "üöô", "üöå", "üöé", "üèéÔ∏è", "üöì", "üöë", "üöí", "üöú"]
    static let sportEmojis = ["‚öΩÔ∏è", "üèÄ", "üèà", "‚öæÔ∏è", "üéæ", "üèê", "üèâ", "üé±", "üèì", "üè∏"]
    static let animalEmojis = ["üê∂", "üê±", "üê≠", "üêπ", "üê∞", "ü¶ä", "üêª", "üêº", "üê®", "üêØ"]
    static let foodEmojis = ["üçé", "üçå", "üçá", "üçì", "üçí", "üçâ", "üçç", "üçë", "ü•ù", "üçÜ"]
    static let natureEmojis = ["üå≤", "üå≥", "üå¥", "üåµ", "üåø", "‚òòÔ∏è", "üåª", "üåº", "üå∑", "üçÇ"]
    static let facesEmojis = ["üòÄ", "üòÇ", "üòç", "üòé", "üò°", "üò≠", "ü•≥", "üò±", "üò¥", "ü§Ø"]
    private static let defaultEmojis = ["üíï", "üí†", "ü™ø", "üê£", "ü¶Ä", "üçâ", "ü¶ã", "üå™Ô∏è", "üçí","üêù"]
    
    private static func createMemoryGame() -> MemoryGame<String> {
        return MemoryGame(numberOfPairs: 2) { pairIndex in
            if let randomIndex = emojis.indices.randomElement() {
                return emojis.remove(at: randomIndex)
            } else {
                return "‚ÅâÔ∏è"
            }
        }
    }
    
    @Published private var model = createMemoryGame()
    
    var score: Int {
        return model.score
    }
    
    var cards: Array<Card> {
        return model.cards
    }
    
    // MARK: Intents
    func shuffle() {
        model.shuffle()
    }
    
    func choose(_ card: Card) {
        model.choose(card)
    }
    
    func getTheme() -> String {
        return EmojiMemoryGame.theme.capitalized
    }
    
    func themeColor() -> Color {
        switch EmojiMemoryGame.theme {
        case "vehicle":
            return .red
        case "sport":
            return .blue
        case "animal":
            return .brown
        case "food":
            return .orange
        case "nature":
            return .green
        case "face":
            return .yellow
        default:
            return .gray
        }
    }
    
    func newGame() {
        if let randomTheme = themes.randomElement() {
            EmojiMemoryGame.theme = randomTheme
        }
        model = EmojiMemoryGame.createMemoryGame()
        shuffle()
    }
}
